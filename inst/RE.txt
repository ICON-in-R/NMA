# Survival analysis - random effects analysis (B) 
# intended for use on survival data to estimate hazard ratios but
# can be used for synthesising any constant treatment effects

model {

# Define Prior Distributions
# on random tx effect variance
  sd ~ dunif(0, 5)
  reTau <- 2/pow(sd, 2)

# On tx effect mean
  beta[1] <- 0
  for (tt in 2:nTx) {
    beta[tt] ~ dnorm(mu_beta, prec_beta)
  }

# On individual study baseline effect
  for(ss in 1:nStudies) {
    alpha[ss] ~ dnorm(mu_alpha, prec_alpha)
  }

# Define random effect
  for (ss in 1:nStudies) {
    for(tt in 1:nTx) {
      re[ss,tt] ~ dnorm(0, reTau)
    }
  }

# Fit data
# For hazard ratio reporting studies
  for(ii in 1:LnObs) {
    Lmu[ii] <- alpha[Lstudy[ii]]*multi[ii] + re[Lstudy[ii], Ltx[ii]] -
               re[Lstudy[ii], Lbase[ii]] + beta[Ltx[ii]] - beta[Lbase[ii]] 
    Lprec[ii] <- 1/pow(Lse[ii], 2)
    Lmean[ii] ~ dnorm(Lmu[ii], Lprec[ii])
	Ldev[ii] <- pow((Lmean[ii] - Lmu[ii]), 2)/pow(Lse[ii], 2)
  }
	
	totresdev <- sum(Ldev[1:LnObs])

# For binary data reporting studies
#  for(ss in 1:BnObs) {
#    logCumHaz[ss] <- alpha[Bstudy[ss]] + re[Bstudy[ss], Btx[ss]] -
#    re[Bstudy[ss], Bbase[ss]] + beta[Btx[ss]] - beta[Bbase[ss]] 
#    cumFail[ss] <- 1 - exp(-1*exp(logCumHaz[ss]))
#    Br[ss] ~ dbin(cumFail[ss], Bn[ss])
#  }

# Calculate HRs
  for (hh in 2:nTx) {
    hr[hh] <- exp(beta[hh])
  }

# Ranking plot
  for (ll in 1:nTx) {
    for (mm in 1:nTx) {
      rk[ll, mm] <- equals(ranked(beta[], mm), beta[ll])
    }
  }
}

